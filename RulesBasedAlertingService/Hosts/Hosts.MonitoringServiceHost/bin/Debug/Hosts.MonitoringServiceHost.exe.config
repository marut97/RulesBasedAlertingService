<?xml version="1.0"?>
<configuration>
  <configSections>
    <section name="unity" type="Microsoft.Practices.Unity.Configuration.UnityConfigurationSection,Unity.Configuration"/>
  </configSections>
  <startup>
    <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.6.1"/>
  </startup>
  <unity xmlns="http://schemas.microsoft.com/practices/2010/unity">
    <container>
      <register type="Contracts.CustomDeviceRepository.ICustomDeviceRepository,Contracts.CustomDeviceRepository" mapTo="DataAccessLayer.CustomDeviceRepoLib.CustomDeviceRepository,DataAccessLayer.CustomDeviceRepoLib"/>
      <register type="Contracts.DeviceRepository.IDeviceRepository,Contracts.DeviceRepository" mapTo="DataAccessLayer.DeviceRepositoryLib.DeviceRepository,DataAccessLayer.DeviceRepositoryLib"/>
      <register type="Contracts.PatientRepository.IPatientRepository,Contracts.PatientRepository" mapTo="DataAccessLayer.PatientRepositoryLib.PatientRepository,DataAccessLayer.PatientRepositoryLib"/>
      <register type="Contracts.HospitalBedRepository.IHospitalBedRepository,Contracts.HospitalBedRepository" mapTo="DataAccessLayer.HospitalBedRepoLib.HospitalBedRepository,DataAccessLayer.HospitalBedRepoLib"/>
      <register type="Contracts.AdmissionRepository.IAdmissionRepository,Contracts.AdmissionRepository" mapTo=" DataAccessLayer.AdmissionRepositoryLib.AdmissionRepository, DataAccessLayer.AdmissionRepositoryLib"/>

      <register type="Processor.ProcessingUnitLib.ProcessingUnit,Processor.ProcessingUnitLib" mapTo=" Processor.ProcessingUnitLib.ProcessingUnit, Processor.ProcessingUnitLib"/>
      <register type="Contracts.VitalsRepository.IVitalsRepository,Contracts.VitalsRepository" mapTo=" DataAccessLayer.VitalsRepositoryLib.VitalsRepository, DataAccessLayer.VitalsRepositoryLib"/>
      <register type="Contracts.AlertManager.IAlertManager,Contracts.AlertManager" mapTo=" Processor.AlertingUnitLib.AlertManager, Processor.AlertingUnitLib"/>
      <register type="Contracts.AlertManager.IVitalsAlertManager,Contracts.AlertManager" mapTo=" Processor.AlertingUnitLib.VitalsAlertManager, Processor.AlertingUnitLib"/>

    </container>
  </unity>
  <appSettings>
    <add key="aspnet:UseTaskFriendlySynchronizationContext" value="true" />
  </appSettings>
  <system.web>
    <compilation debug="true" targetFramework="4.5.2" />
    <httpRuntime targetFramework="4.5.2"/>
  </system.web>
  <system.serviceModel>
    <!--<bindings>
      <wsHttpBinding>
        <binding name="NoSecurityWsHttp">
          <security mode ="None">
            <transport clientCredentialType="None"/>
            <message establishSecurityContext="false"/>
          </security>
        </binding>
      </wsHttpBinding>
      <wsDualHttpBinding>
        <binding name="NoSecurityWsDualHttp">
          <security mode="None">
            <message clientCredentialType="None"/>
          </security>
        </binding>
      </wsDualHttpBinding>
    </bindings>-->
    <services>
      <service name="Controllers.VitalsDataService.VitalsDataService" behaviorConfiguration="mexBehaviour">
        <endpoint address="VitalsDataService" binding="wsHttpBinding" contract="Controllers.VitalsDataService.IVitalsDataService"/>
        <host>
          <baseAddresses>
            <add baseAddress="http://localhost:52344"/>
          </baseAddresses>
        </host>
      </service>
      <service name="Controllers.DoctorMonitoringService.DoctorMonitoringService" behaviorConfiguration="mexBehaviour">
        <endpoint address="DoctorMonitoringService" binding="wsDualHttpBinding" contract="Controllers.DoctorMonitoringService.IDoctorMonitoringService"/>
        <host>
          <baseAddresses>
            <add baseAddress="http://localhost:52300"/>
          </baseAddresses>
        </host>
      </service>
      <service name="Controllers.NurseMonitoringService.NurseMonitoringService" behaviorConfiguration="mexBehaviour">
        <endpoint address="NurseMonitoringService" binding="wsDualHttpBinding" contract="Controllers.NurseMonitoringService.INurseMonitoringService"/>
        <host>
          <baseAddresses>
            <add baseAddress="http://localhost:52310"/>
          </baseAddresses>
        </host>
      </service>
      <service name="Controllers.AdditionalNurseDataService.AdditionalNurseDataService" behaviorConfiguration="mexBehaviour">
        <endpoint address="AdditionalNurseDataService" binding="wsHttpBinding" contract="Controllers.AdditionalNurseDataService.IAdditionalNurseDataService"/>
        <host>
          <baseAddresses>
            <add baseAddress="http://localhost:52320"/>
          </baseAddresses>
        </host>
      </service>
      <service name="Controllers.AdditionalDoctorDataService.AdditionalDoctorDataService" behaviorConfiguration="mexBehaviour">
        <endpoint address="DoctorMonitoringService" binding="wsHttpBinding" contract="Controllers.AdditionalDoctorDataService.IAdditionalDoctorDataService"/>
        <host>
          <baseAddresses>
            <add baseAddress="http://localhost:52330"/>
          </baseAddresses>
        </host>
      </service>
    </services>
    <behaviors>
      <serviceBehaviors>
        <behavior name="mexBehaviour">
          <serviceDebug includeExceptionDetailInFaults="true" />
          <serviceMetadata httpGetEnabled="true"/>
        </behavior>
      </serviceBehaviors>
    </behaviors>
    <protocolMapping>
      <add binding="basicHttpsBinding" scheme="https" />
    </protocolMapping>
    <serviceHostingEnvironment aspNetCompatibilityEnabled="true" multipleSiteBindingsEnabled="true" />
  </system.serviceModel>
  <system.webServer>
    <modules runAllManagedModulesForAllRequests="true"/>
    <!--
        To browse web app root directory during debugging, set the value below to true.
        Set to false before deployment to avoid disclosing web app folder information.
      -->
    <directoryBrowse enabled="true"/>
  </system.webServer>

</configuration>